import { NextPageContext } from "next";
import Head from "next/head";
import { PreloadedQuery } from "react-relay";
import { graphql, usePreloadedQuery } from "react-relay/hooks";
import { getPreloadedQuery } from "../data/network";
import { ProductLink } from "../src/components/ProductLink";
import preloadQuery, {
  pages_Query,
} from "../__generated__/pages_Query.graphql";

interface ProductsProps {
  queryRefs: {
    query: PreloadedQuery<pages_Query>;
  };
}
const Products = (props: ProductsProps) => {
  const data = usePreloadedQuery(
    graphql`
      query pages_Query {
        Products_connection(first: 10) {
          edges {
            cursor
            node {
              id
              ...ProductLink_product
            }
          }
        }
      }
    `,
    props.queryRefs.query
  );

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <ul>
          {data.Products_connection.edges.map(edge => (
            <li key={edge.cursor}>
              <ProductLink product={edge.node}></ProductLink>
            </li>
          ))}
        </ul>
      </main>
    </>
  );
};

Products.getInitialProps = async (ctx: NextPageContext) => {
  return {
    preloadedQueries: {
      query: await getPreloadedQuery(preloadQuery, {}),
    },
  };
};

export default Products;
